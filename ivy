<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Treasure Hunt - Page 2</title>
  <style>
    body {
      background-color: #fdf6f0;
      color: #333;
      font-family: 'Nunito', sans-serif;
      text-align: center;
      padding: 40px;
    }

    h1 {
      font-size: 2em;
      margin-bottom: 10px;
    }

    p {
      font-size: 1.2em;
      margin-bottom: 20px;
    }

    #puzzle {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 2px;
      justify-content: center;
      margin: 20px auto;
    }

    .piece {
      width: 100px;
      height: 100px;
      background-size: 300px 300px;
      cursor: grab;
      border: 1px solid #ccc;
    }

    #lyric {
      padding: 8px;
      width: 250px;
      margin: 15px 0;
    }

    #nextBtn {
      display: none;
      margin-top: 20px;
      padding: 10px 20px;
      background: #333;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 1em;
      cursor: pointer;
    }

    #nextBtn:hover {
      background: #555;
    }
  </style>
</head>
<body>
  <h1>Step 2</h1>
  <p>Our song, you've got this, finish the lyric and we'll take the next step</p>

  <!-- Puzzle -->
  <div id="puzzle"></div>

  <!-- Lyric challenge -->
  <p><em>Finish the lyric:</em> "I thought that I was dreaming,"</p>
  <input type="text" id="lyric" placeholder="Type here...">

  <!-- Next button -->
  <br>
  <button id="nextBtn" onclick="window.location.href='page3.html'">Next</button>

  <script>
    const puzzle = document.getElementById("puzzle");
    const lyricInput = document.getElementById("lyric");
    const nextBtn = document.getElementById("nextBtn");

    // Split image into 9 pieces (3x3)
    const image = "750737a023d383b93057b73d546bfe4e.1000x1000x1.png"; // your uploaded image filename
    const positions = [
      "0px 0px", "-100px 0px", "-200px 0px",
      "0px -100px", "-100px -100px", "-200px -100px",
      "0px -200px", "-100px -200px", "-200px -200px"
    ];

    let order = [...Array(9).keys()];
    order.sort(() => Math.random() - 0.5); // shuffle pieces

    order.forEach((i) => {
      const div = document.createElement("div");
      div.classList.add("piece");
      div.style.backgroundImage = `url('${image}')`;
      div.style.backgroundPosition = positions[i];
      div.draggable = true;
      div.dataset.correct = i;
      puzzle.appendChild(div);
    });

    let dragSrc = null;

    function swapPieces(e) {
      if (dragSrc) {
        const tempBg = dragSrc.style.backgroundPosition;
        const tempCorrect = dragSrc.dataset.correct;

        dragSrc.style.backgroundPosition = e.target.style.backgroundPosition;
        dragSrc.dataset.correct = e.target.dataset.correct;

        e.target.style.backgroundPosition = tempBg;
        e.target.dataset.correct = tempCorrect;

        checkCompletion();
      }
    }

    puzzle.addEventListener("dragstart", (e) => {
      dragSrc = e.target;
    });

    puzzle.addEventListener("dragover", (e) => e.preventDefault());

    puzzle.addEventListener("drop", (e) => {
      e.preventDefault();
      swapPieces(e);
    });

    // Check if puzzle is solved
    function isPuzzleComplete() {
      const pieces = [...puzzle.children];
      return pieces.every((piece, idx) => piece.style.backgroundPosition === positions[idx]);
    }

    // Check lyric + puzzle
    function checkCompletion() {
      const lyricCorrect = lyricInput.value.trim().toLowerCase() === "when you said you loved me";
      if (isPuzzleComplete() && lyricCorrect) {
        nextBtn.style.display = "inline-block";
      } else {
        nextBtn.style.display = "none";
      }
    }

    lyricInput.addEventListener("input", checkCompletion);
  </script>
</body>
</html>
